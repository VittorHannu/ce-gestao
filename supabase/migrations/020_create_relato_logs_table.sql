-- Tabela para armazenar o histórico de alterações dos relatos
CREATE TABLE public.relato_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    relato_id BIGINT NOT NULL REFERENCES public.relatos(id) ON DELETE CASCADE,
    user_id UUID REFERENCES public.profiles(id) ON DELETE SET NULL,
    action_type TEXT NOT NULL, -- Ex: 'CREATE', 'UPDATE', 'STATUS_CHANGE', 'ADD_RESPONSIBLE', 'REMOVE_RESPONSIBLE', 'COMMENT'
    details JSONB, -- Para guardar o estado inicial ou detalhes da alteração como { "field": "status", "old_value": "Aberto", "new_value": "Em Análise" }
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- Adiciona comentários para clareza
COMMENT ON TABLE public.relato_logs IS 'Registra o histórico de eventos e alterações para cada relato.';
COMMENT ON COLUMN public.relato_logs.relato_id IS 'Referência ao relato que sofreu a alteração.';
COMMENT ON COLUMN public.relato_logs.user_id IS 'Usuário que realizou a ação. Pode ser nulo se a ação for do sistema.';
COMMENT ON COLUMN public.relato_logs.action_type IS 'Tipo de ação realizada (ex: CREATE, UPDATE, COMMENT).';
COMMENT ON COLUMN public.relato_logs.details IS 'Objeto JSON com os dados iniciais do relato ou os detalhes da alteração (campo, valor antigo, valor novo).';

-- Habilita a Segurança a Nível de Linha (RLS)
ALTER TABLE public.relato_logs ENABLE ROW LEVEL SECURITY;

-- Política para permitir que usuários vejam os logs dos relatos que eles já têm permissão para acessar.
-- A lógica é: se você pode ver o relato, pode ver seu histórico.
CREATE POLICY "Usuários podem ver logs de relatos que eles acessam"
ON public.relato_logs
FOR SELECT
USING (
  (auth.role() = 'authenticated') AND
  (EXISTS (SELECT 1 FROM public.relatos WHERE id = relato_logs.relato_id))
);

-- Política para permitir que usuários autenticados criem novos registros de log.
-- A lógica de negócio (quem pode registrar o quê) será controlada na aplicação.
CREATE POLICY "Usuários autenticados podem criar logs"
ON public.relato_logs
FOR INSERT
WITH CHECK (
  auth.role() = 'authenticated'
);
